{"version":3,"sources":["GetDataJson.js","Post.js","Comment.js","AddCommentForm.js","ListOfPosts.js","App.js","index.js"],"names":["GetDataJson","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","PropTypes","string","Post","name","email","address","title","body","react_default","createElement","className","zipcode","city","street","suite","Comment","cmnt","AddCommentForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setChanges","event","field","value","target","correctValue","String","replace","setState","prevState","defineProperty","state","comment","_this2","type","placeholder","onChange","cols","rows","onClick","preventDefault","handleClose","addComment","postId","React","Component","ListOfPosts","rerander","changeStatus","postsUserComments","toConsumableArray","postList","filteredPosts","handleCommentFormClose","addVisibleComment","id","visCom","visibleComments","index","findIndex","visId","splice","push","filterPosts","searchPostString","filter","post","toLowerCase","includes","commentingPostId","Fragment","length","map","src_Post","user","concat","comments","src_AddCommentForm","addCommentHandler","App","handleLoadBTNClick","users","posts","loadBTN","lastCommentId","sort","b","createPUCArray","initialPostsUserComment","objectSpread","find","userId","reverse","_ref2","_callee2","_context2","_x2","_x3","_x4","src_ListOfPosts","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b16a3311.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst GetDataJson = async(url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\nGetDataJson.PropTypes = {\n  url: PropTypes.string,\n};\n\nexport default GetDataJson;\n","import React from 'react';\n\nconst Post = ({ name, email, address, title, body }) => {\n  return (\n    <div className=\"post\">\n      <div className=\"postUp\">\n        <div className=\"author\">\n          {name}\n        </div>\n        <div className=\"author\">\n          {email}\n        </div>\n      </div>\n\n      <div className=\"postTitle\">\n        <h1>{title}</h1>\n      </div>\n\n      <div className=\"postBody\">\n        <p className=\"postText\">{body}</p>\n      </div>\n\n      <div className=\"postFooter\">\n        <div className=\"author\">\n          Come and get me sucker ---\n        </div>\n        <div className=\"author\">\n          Here is my IRL address!!!\n        </div>\n        <div className=\"author\">\n          --- {address.zipcode},&nbsp;\n              {address.city},&nbsp;\n              {address.street} str.,&nbsp;\n              {address.suite}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\n\nconst Comment = cmnt => (\n  <div className=\"comment\">\n    {cmnt.body}\n    <div className=\"cmntAuthor\">\n      <div className=\"author\">\n        {cmnt.name}\n      </div>\n      <div className=\"author\">\n        {cmnt.email}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Comment;\n","import React from 'react';\n\nclass AddCommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      email: '',\n      comment: '',\n    };\n  }\n\n  setChanges = (event, field) => {\n    const { value } = event.target;\n    let correctValue = String(value);\n\n    switch (field) {\n      case 'name':\n        correctValue = correctValue.replace(/[^\\wА-Яа-яЁё .-]/g, '');\n        break;\n      case 'email':\n        correctValue = correctValue.replace(/[^\\w@.-_]/g, '');\n        break;\n      default:\n        correctValue = correctValue.replace(/[`]/g, '');\n    }\n\n    this.setState(prevState => ({\n      [field]: correctValue,\n    }));\n  }\n\n  render() {\n    return (\n      <form>\n        <fieldset>\n          <legend>add Your Comment here</legend>\n\n          <div className=\"formDiv\">\n            <label>\n              Your Name:\n              <input\n                type=\"text\"\n                placeholder=\"Enter name here\"\n                value={this.state.name}\n                onChange={event => this.setChanges(event, 'name')}\n              />\n            </label>\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n            <label>\n              Your e-mail:\n              <input\n                type=\"email\"\n                placeholder=\"Enter e-mail here\"\n                value={this.state.email}\n                onChange={event => this.setChanges(event, 'email')}\n              />\n            </label>\n          </div>\n\n          <div className=\"formDiv\">\n            <label>\n              Comment:\n              <textarea\n                cols=\"60\"\n                rows=\"3\"\n                value={this.state.comment}\n                onChange={event => this.setChanges(event, 'comment')}\n              />\n            </label>\n          </div>\n\n          <div className=\"formDiv\">\n            <button onClick={(event) => {\n              event.preventDefault();\n\n              return this.props.handleClose();\n            }}>\n              Cancel\n            </button>\n            &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\n\n            <button onClick={(event) => {\n              event.preventDefault();\n\n              return this.props.addComment(this.props.postId, this.state.name, this.state.email, this.state.comment);\n            }}>\n              Submit\n            </button>\n          </div>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default AddCommentForm;\n","import React from 'react';\nimport Post from './Post';\nimport Comment from './Comment';\nimport AddCommentForm from './AddCommentForm';\n\nclass ListOfPosts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      postsUserComments: [...this.props.postList],\n      filteredPosts: [...this.props.postList],\n      visibleComments: [],\n      searchPostString: '',\n      commentingPostId: null,\n      changeStatus: 0,\n    };\n  }\n\n  rerander = () => {\n    if (this.props.changeStatus > this.state.changeStatus) {\n      this.setState({\n        postsUserComments: [...this.props.postList],\n        filteredPosts: [...this.props.postList],\n        changeStatus: this.props.changeStatus,\n      });\n      this.handleCommentFormClose();\n    }\n  }\n\n  addVisibleComment = (id) => {\n    let visCom = [...this.state.visibleComments];\n    const index = visCom.findIndex(visId => visId === id);\n\n    index >= 0 ? visCom.splice(index, 1) : visCom.push(id);\n\n    this.setState({\n      visibleComments: [...visCom],\n    });\n  }\n\n  filterPosts = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      searchPostString: value,\n      filteredPosts: prevState.postsUserComments.filter(post => (\n        post.title.toLowerCase().includes(value.toLowerCase())\n        || post.body.toLowerCase().includes(value.toLowerCase())\n      )),\n    }));\n  }\n\n  handleCommentFormClose = () => (\n    this.setState({ commentingPostId: null })\n  )\n\n  render() {\n    this.rerander();\n\n    return (\n      <>\n        <h1>Instantly Dynamic list of {this.state.filteredPosts.length} posts was Loaded</h1>\n\n        <input\n          type=\"text\"\n          placeholder=\"Search for Post\"\n          value={this.state.searchPostString}\n          onChange={this.filterPosts}\n        />\n\n        {this.state.filteredPosts.map(post => (\n          <article>\n            <Post\n              name={post.user.name}\n              email={post.user.email}\n              address={post.user.address}\n              title={post.title}\n              body={post.body}\n            />\n\n            <div className=\"cmntsN\">\n              <div\n                className=\"cmntsAdd\"\n                onClick={() => this.setState({ commentingPostId: post.id })}\n              >\n                <b>\n                  Add new Comment\n                </b>\n              </div>\n\n              <div\n                className=\"cmntsShow\"\n                onClick={() => this.addVisibleComment(post.id)}\n              >\n                <b>\n                  {this.state.visibleComments.includes(post.id)\n                    ? '----- Close Comments'\n                    : `----- View ${post.comments.length} comments`\n                  }\n                </b>\n              </div>\n            </div>\n\n            {this.state.commentingPostId === post.id\n              && (<AddCommentForm\n                    postId={post.id}\n                    addComment={this.props.addCommentHandler}\n                    handleClose={this.handleCommentFormClose}\n                  />)\n            }\n\n            {this.state.visibleComments.includes(post.id)\n              && post.comments.map(comment => Comment(comment))\n            }\n\n          </article>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default ListOfPosts;\n","import React from 'react';\nimport './App.css';\nimport GetDataJson from './GetDataJson';\nimport ListOfPosts from './ListOfPosts';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      postsUserComments: [],\n      users: [],\n      posts: [],\n      comments: [],\n      lastCommentId: 0,\n      loadBTN: '!!! Load !!!',\n      changeStatus: 0,\n    };\n  }\n\n  handleLoadBTNClick = async() => {\n    this.setState({\n      loadBTN: 'Loading ...',\n    });\n\n    const users = await GetDataJson('https://jsonplaceholder.typicode.com/users');\n    const posts = await GetDataJson('https://jsonplaceholder.typicode.com/posts');\n    const comments = await GetDataJson('https://jsonplaceholder.typicode.com/comments');\n\n    await this.setState({\n      posts: [...posts],\n      users: [...users],\n      comments: [...comments],\n      lastCommentId: comments.map(comment => comment.id)\n        .sort((a, b) => a.id - b.id)[comments.length - 1],\n    });\n\n    this.createPUCArray();\n\n    this.setState({\n      loadBTN: 'Loaded',\n    });\n  }\n\n  // PUC-Array means array of { (P)ost with (U)ser with (C)omments }.\n  createPUCArray = () => {\n    const initialPostsUserComment = this.state.posts.map(post => (\n      {\n        ...post,\n        user: this.state.users.find(user => user.id === post.userId),\n        comments: this.state.comments.filter(comment => comment.postId === post.id).reverse(),\n      }\n    ));\n\n    this.setState(prevState => (\n      {\n        changeStatus: prevState.changeStatus + 1,\n        postsUserComments: [...initialPostsUserComment],\n      }\n    ));\n  }\n\n  addComment = async(postId, name, email, comment) => {\n    await this.setState(prevState => ({\n      comments:\n      [\n        ...prevState.comments,\n        {\n          postId: postId,\n          id: prevState.lastCommentId + 1,\n          name: name,\n          email: email,\n          body: comment,\n        },\n      ],\n      lastCommentId: prevState.lastCommentId + 1,\n    }));\n\n    this.createPUCArray();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.loadBTN !== 'Loaded'\n          ? (\n              <>\n                <h1>Dynamic list of posts</h1>\n                <button onClick={this.handleLoadBTNClick}>\n                  {this.state.loadBTN}\n                </button>\n              </>\n            )\n          : (\n              <>\n                <h3>\n                  Once upon a time in a very ancient<br />\n                  and extremely outdated forum <br />\n                  that no one has visited for decades ...<br />\n                  or even centuries...\n                </h3>\n\n                <ListOfPosts\n                  postList={this.state.postsUserComments}\n                  addCommentHandler={this.addComment}\n                  changeStatus={this.state.changeStatus}\n                />\n              </>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}